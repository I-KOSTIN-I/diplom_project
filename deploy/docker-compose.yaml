version: '3.9'

services:

  postgres:
    image: postgres:14.5-alpine
    restart: on-failure
    env_file:
      - ./.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - "5432:5432"
    networks:
      - backend_nw

  api:
    image: kostinvadim/diplom_project:latest
    restart: always
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: python3 -c 'import http.client;http.client.HTTPConnection("127.0.0.1:8000", timeout=1).request("GET", "/ping/")'
      interval: 3s
      timeout: 3s
      retries: 3
    networks:
      - backend_nw
      - frontend_nw

  frontend:
    image: sermalenk/skypro-front:lesson-36
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - frontend_nw
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static/:/opt/static/

volumes:
  pg_data:

networks:
  backend_nw:
    driver: bridge
  frontend_nw:
    driver: bridge