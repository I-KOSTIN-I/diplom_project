name: Build and Deploy actions
on:
  push:
    tags:
      - v*

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_HUB_USERNAME }}/diplom_project
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./source/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
        with:
          strip_v: true
      -
        name: Render template
        run: |
          echo "${{ secrets.VAULT_PASSWORD }}" ansible-vault decrypt deploy/env
          echo "${{ secrets.VAULT_PASSWORD }}" ansible-vault decrypt deploy/docker-compose.yaml
          echo "${{ secrets.VAULT_PASSWORD }}" ansible-vault decrypt deploy/nginx/default.conf
          mv deploy/env deploy/.env
          printf "\nTAG_NAME=${{ steps.tag.outputs.tag }}" >> deploy/.env
      -
        name: Copy on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: diplom
          strip_components: 1
